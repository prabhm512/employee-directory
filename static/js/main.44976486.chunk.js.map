{"version":3,"sources":["components/Jumbotron.js","utils/API.js","components/EmpTable.js","App.js","index.js"],"names":["Jumbotron","className","axios","get","employees","filteredEmpArray","EmpTable","useState","search","setSearch","renderTable","empArray","document","querySelector","innerHTML","forEach","el","date","Date","dob","year","getFullYear","month","getMonth","dt","getDate","newDate","employeeHTML","picture","medium","name","first","last","phone","email","sortEmployees","arrIndexName","nameA","nameB","sortedEmpArray","length","sort","a","b","toLowerCase","storeEmployees","localStorage","setItem","JSON","stringify","useEffect","storedEmployees","parse","getItem","API","then","res","push","data","results","catch","err","console","log","init","searchStr","filter","includes","filterEmployees","type","placeholder","aria-label","value","onChange","event","preventDefault","target","scope","icon","faSortAlphaDown","onClick","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44976486.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Jumbotron() {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Employee Directory</h1>\r\n                <p className=\"lead\">Click on carrots to filter by heading or use the search box to narrow your results.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import axios from 'axios';\r\n\r\nconst BASEURL = 'https://randomuser.me/api/?results=100&nat=au';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    getRandomEmployees: () => axios.get(BASEURL)\r\n};","/* eslint-disable no-undef */\r\nimport React, { useEffect, useState } from 'react';\r\nimport API from '../utils/API';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSortAlphaDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlet employees = [];\r\nlet filteredEmpArray = [];\r\n\r\nfunction EmpTable() {\r\n\r\n    // Get employee names from local storage so new list of employees is not rendered on every page reload\r\n    const init = () => {\r\n        let storedEmployees = JSON.parse(localStorage.getItem(\"employeeList\"));\r\n\r\n        // Only fill the employees array if it is empty\r\n        if (storedEmployees !== null) {\r\n            employees = storedEmployees;\r\n            renderTable(employees[0]); \r\n        } else {\r\n            // Make a GET request to the Random Users API\r\n            API.getRandomEmployees()\r\n                .then(res => {\r\n                    employees.push(res.data.results);\r\n                    storeEmployees();\r\n                })\r\n                .then(() => {\r\n                    renderTable(employees[0]);\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    // Manage state of Search box\r\n    const [search, setSearch] = useState({search: \"\"});\r\n\r\n    // Render table with data in employees array\r\n    const renderTable = (empArray) => {\r\n        // Clear previous innerHTML before rendering new innerHTML\r\n        document.querySelector(\".employees\").innerHTML = \"\";\r\n\r\n        empArray.forEach(el => {\r\n\r\n            // Convert ISO date to DD/MM/YYYY\r\n            let date = new Date(`${el.dob.date}`);\r\n            let year = date.getFullYear();\r\n            let month = date.getMonth()+1;\r\n            let dt = date.getDate();\r\n\r\n            if (dt < 10) {\r\n                dt = '0' + dt;\r\n            }\r\n            if (month < 10) {\r\n                month = '0' + month;\r\n            }\r\n\r\n            const newDate = dt+'-' + month + '-'+year;\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n            let employeeHTML = `\r\n                <tr>\r\n                    <td><img src=\"${el.picture.medium}\"</td>\r\n                    <td>${el.name.first}</td>\r\n                    <td>${el.name.last}</td>\r\n                    <td>${el.phone}</td>\r\n                    <td>${el.email}</td>\r\n                    <td>${newDate}</td>\r\n                </tr>\r\n            `;\r\n            document.querySelector(\".employees\").innerHTML += employeeHTML;\r\n        });\r\n    }\r\n\r\n    const filterEmployees = () => {\r\n        // If employees array is empty, do not run the filter\r\n        if (employees.length !== 0) {\r\n            const searchStr = search.search.toLowerCase();\r\n            filteredEmpArray = employees[0].filter(el => el.name.first.toLowerCase().includes(searchStr) || el.name.last.toLowerCase().includes(searchStr) || el.email.toLowerCase().includes(searchStr));\r\n            renderTable(filteredEmpArray);\r\n        }\r\n    }\r\n\r\n    // Sort employees in alphabetical order\r\n    const sortEmployees = (arrIndexName) => {\r\n        \r\n        let sortedEmpArray = [];\r\n        let nameA, nameB;\r\n\r\n\r\n        if (filteredEmpArray.length !== 0 ) {\r\n            sortedEmpArray = filteredEmpArray.sort((a, b) => {\r\n                // To reuse function for sorting by first and last name\r\n                if (arrIndexName === 'first') {\r\n                    nameA = a.name.first.toLowerCase();\r\n                    nameB = b.name.first.toLowerCase();\r\n                } else {\r\n                    nameA = a.name.last.toLowerCase();\r\n                    nameB = b.name.last.toLowerCase();\r\n                }\r\n\r\n                if (nameA < nameB) {\r\n                    return -1;\r\n                } else if (nameA > nameB) {\r\n                    return 1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            renderTable(sortedEmpArray);\r\n        } else {\r\n            sortedEmpArray = employees[0].sort((a, b) => {\r\n                if (arrIndexName === 'first') {\r\n                    nameA = a.name.first.toLowerCase();\r\n                    nameB = b.name.first.toLowerCase();\r\n                } else {\r\n                    nameA = a.name.last.toLowerCase();\r\n                    nameB = b.name.last.toLowerCase();\r\n                }\r\n\r\n                if (nameA < nameB) {\r\n                    return -1;\r\n                } else if (nameA > nameB) {\r\n                    return 1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            renderTable(sortedEmpArray);\r\n        }\r\n    }\r\n\r\n    // Store all employees in localstorage\r\n    const storeEmployees = () => {\r\n        localStorage.setItem(\"employeeList\", JSON.stringify(employees));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (employees.length === 0) {\r\n            init();\r\n        } else {\r\n            filterEmployees();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <section>\r\n        <div className=\"container-sm searchForm\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\"></div>\r\n                <div className=\"col-sm-4\">\r\n                    <form>\r\n                    <input className=\"form-control searchInput\" name=\"searchString\" type=\"search\" placeholder=\"Search (name or email)\" aria-label=\"Search\" value={search.search}\r\n                    onChange={event => {\r\n                        // Prevent the location from refreshing\r\n                        event.preventDefault();\r\n\r\n                        setSearch({search: event.target.value});\r\n                    }}></input>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-sm-4\"></div>\r\n            </div>\r\n        </div>\r\n        <div className=\"container-sm\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                    <table className=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Image</th>\r\n                                <th scope=\"col\">First Name <span className=\"sort-alpha-down\"><FontAwesomeIcon icon={faSortAlphaDown} onClick={event => {\r\n                                    event.preventDefault();\r\n                                    sortEmployees('first');\r\n                                }}/></span></th>\r\n                                <th scope=\"col\">Last Name <span className=\"sort-alpha-down\"><FontAwesomeIcon icon={faSortAlphaDown} onClick={event => {\r\n                                    event.preventDefault();\r\n                                    sortEmployees('last');\r\n                                }}/></span></th>\r\n                                <th scope=\"col\">Phone</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">DOB</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"employees\"></tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </section>\r\n    )\r\n}        \r\n\r\nexport default EmpTable;","import './App.css';\nimport Jumbotron from './components/Jumbotron';\nimport EmpTable from './components/EmpTable';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Jumbotron></Jumbotron>\n      <EmpTable></EmpTable>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}